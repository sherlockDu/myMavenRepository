package com.foo.tourist.dao;

import java.util.Date;
import java.util.List;
import org.apache.ibatis.annotations.Arg;
import org.apache.ibatis.annotations.ConstructorArgs;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.type.JdbcType;
import org.louis.hometutor.po.Doctor;
import org.louis.hometutor.po.DoctorExample;

public interface DoctorMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table doctor
     *
     * @mbggenerated
     */
    @SelectProvider(type=DoctorSqlProvider.class, method="countByExample")
    int countByExample(DoctorExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table doctor
     *
     * @mbggenerated
     */
    @SelectProvider(type=DoctorSqlProvider.class, method="selectByExample")
    @ConstructorArgs({
        @Arg(column="id", javaType=Long.class, jdbcType=JdbcType.BIGINT, id=true),
        @Arg(column="createTimeStamp", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP),
        @Arg(column="updateTimeStamp", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP),
        @Arg(column="externalUserId", javaType=Long.class, jdbcType=JdbcType.BIGINT),
        @Arg(column="realName", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="sex", javaType=Boolean.class, jdbcType=JdbcType.BIT),
        @Arg(column="hospitalName", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="hospitalId", javaType=Long.class, jdbcType=JdbcType.BIGINT),
        @Arg(column="departmentName", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="title", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="inviteCode", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="authorityVerifyStatus", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="phoneNo", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="wechatId", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="wechatNo", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="bonusPoint", javaType=Long.class, jdbcType=JdbcType.BIGINT),
        @Arg(column="email", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="binaryCodeUrl", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="birthday", javaType=Date.class, jdbcType=JdbcType.DATE),
        @Arg(column="iconUrl", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="no", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="desc", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="expertDisease", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="hospitalSchedule", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="netSchedule", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="unSettlementedFee", javaType=Long.class, jdbcType=JdbcType.BIGINT),
        @Arg(column="totalFee", javaType=Long.class, jdbcType=JdbcType.BIGINT),
        @Arg(column="patientCount", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="isSignDoctor", javaType=Boolean.class, jdbcType=JdbcType.BIT),
        @Arg(column="sortOrder", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="userId", javaType=Long.class, jdbcType=JdbcType.BIGINT),
        @Arg(column="remark", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="updatorName", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    List<Doctor> selectByExample(DoctorExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table doctor
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "\"id\", \"createTimeStamp\", \"updateTimeStamp\", \"externalUserId\", \"realName\", ",
        "\"sex\", \"hospitalName\", \"hospitalId\", \"departmentName\", \"title\", \"inviteCode\", ",
        "\"authorityVerifyStatus\", \"phoneNo\", \"wechatId\", \"wechatNo\", \"bonusPoint\", ",
        "\"email\", \"binaryCodeUrl\", \"birthday\", \"iconUrl\", \"no\", \"desc\", \"expertDisease\", ",
        "\"hospitalSchedule\", \"netSchedule\", \"unSettlementedFee\", \"totalFee\", ",
        "\"patientCount\", \"isSignDoctor\", \"sortOrder\", \"userId\", \"remark\", \"updatorName\"",
        "from \"doctor\"",
        "where \"id\" = #{id,jdbcType=BIGINT}"
    })
    @ConstructorArgs({
        @Arg(column="id", javaType=Long.class, jdbcType=JdbcType.BIGINT, id=true),
        @Arg(column="createTimeStamp", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP),
        @Arg(column="updateTimeStamp", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP),
        @Arg(column="externalUserId", javaType=Long.class, jdbcType=JdbcType.BIGINT),
        @Arg(column="realName", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="sex", javaType=Boolean.class, jdbcType=JdbcType.BIT),
        @Arg(column="hospitalName", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="hospitalId", javaType=Long.class, jdbcType=JdbcType.BIGINT),
        @Arg(column="departmentName", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="title", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="inviteCode", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="authorityVerifyStatus", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="phoneNo", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="wechatId", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="wechatNo", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="bonusPoint", javaType=Long.class, jdbcType=JdbcType.BIGINT),
        @Arg(column="email", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="binaryCodeUrl", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="birthday", javaType=Date.class, jdbcType=JdbcType.DATE),
        @Arg(column="iconUrl", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="no", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="desc", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="expertDisease", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="hospitalSchedule", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="netSchedule", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="unSettlementedFee", javaType=Long.class, jdbcType=JdbcType.BIGINT),
        @Arg(column="totalFee", javaType=Long.class, jdbcType=JdbcType.BIGINT),
        @Arg(column="patientCount", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="isSignDoctor", javaType=Boolean.class, jdbcType=JdbcType.BIT),
        @Arg(column="sortOrder", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="userId", javaType=Long.class, jdbcType=JdbcType.BIGINT),
        @Arg(column="remark", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="updatorName", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    Doctor selectByPrimaryKey(Long id);
}